class ChildScroller{isChildScrolling=!1;isChildScrollComplete=!1;lastScrollDirection="up";lastContainerYBeforeChildScroll=0;container=null;child=null;constructor(l,i){this.container=l,this.child=i,window.addEventListener("wheel",(l=>this.onBodyScroll(l)),{passive:!1}),this.child.addEventListener("scroll",(l=>this.onChildScroll(l))),window.addEventListener("keydown",(l=>this.handleKeyDown(l))),window.addEventListener("touchmove",(l=>this.handleTouchMove(l)),{passive:!0})}onBodyScroll(l){let i=l.deltaY>=0?"down":"up";const e=child.getBoundingClientRect();if(this.isChildScrolling)l.preventDefault(),this.container.scrollTop=this.lastContainerYBeforeChildScroll,child.scrollTop+=l.deltaY;else if(window.innerHeight>e.height&&!this.isChildScrollComplete){let t=e.top+e.height/2,o=window.innerHeight/2,n=Math.abs(t-o);n>=0&&n<=20&&(this.isChildScrolling=!0,l.preventDefault(),"down"==i?child.scrollTop+=l.deltaY:child.scrollTop-=l.deltaY,this.lastContainerYBeforeChildScroll=this.container.scrollTop,this.container.scrollTop=this.lastContainerYBeforeChildScroll)}else this.isChildScrollComplete?this.isChildScrolling=!1:"down"==i&&e.top<=80&&!this.isChildScrollComplete?(this.isChildScrolling=!0,l.preventDefault(),child.scrollTop+=l.deltaY,this.lastContainerYBeforeChildScroll=this.container.scrollTop,this.container.scrollTop=this.lastContainerYBeforeChildScroll):"up"==i&&e.top<=80&&e.top>30&&!this.isChildScrollComplete&&(this.isChildScrolling=!0,l.preventDefault(),child.scrollTop-=l.deltaY,this.lastContainerYBeforeChildScroll=this.container.scrollTop,this.container.scrollTop=this.lastContainerYBeforeChildScroll);i!==this.lastScrollDirection&&(this.isChildScrollComplete=!1),this.lastScrollDirection=i}onChildScroll(l){("down"==this.lastScrollDirection&&Math.abs(child.scrollHeight-child.scrollTop-child.clientHeight)<5||"up"==this.lastScrollDirection&&child.scrollTop<5)&&(this.isChildScrollComplete=!0,this.isChildScrolling=!1)}triggerWheelEvent(l){const i=new WheelEvent("wheel",{deltaY:l,bubbles:!0,cancelable:!0,view:window});window.dispatchEvent(i)}handleKeyDown(l){"ArrowDown"===l.key?triggerWheelEvent(20):"ArrowUp"===l.key&&triggerWheelEvent(-20),this.isChildScrolling&&l.preventDefault()}handleTouchMove(l){const i=l.touches[0];touchMoveY=i.clientY;const e=touchStartY-touchMoveY,t=new WheelEvent("wheel",{deltaY:e,bubbles:!0,cancelable:!0,view:window});window.dispatchEvent(t)}}